#include <LiquidCrystal_I2C.h>
#include <Wire.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);
#define echoPin 2  // attach pin D2 Arduino to pin Echo of HC-SR04
#define trigPin 3  //attach pin D3 Arduino to pin Trig of HC-SR04
#define echoPin1 4
#define trigPin1 5
// defines variables
long duration;   // variable for the duration of sound wave travel
int distance;    // variable for the distance measurement
long duration1;  // variable for the duration of sound wave travel
int distance1;   // variable for the distance measurement
int in = 0;
int out = 0;
int total = 0;
void setup() {

  pinMode(trigPin, OUTPUT);   // Sets the trigPin as an OUTPUT
  pinMode(echoPin, INPUT);    // Sets the echoPin as an INPUT
  pinMode(trigPin1, OUTPUT);  // Sets the trigPin as an OUTPUT
  pinMode(echoPin1, INPUT);
  Serial.begin(9600);                                // // Serial Communication is starting with 9600 of baudrate speed
  Serial.println("Ultrasonic Sensor HC-SR04 Test");  // print some text in Serial Monitor
  Serial.println("with Arduino UNO R3");

  lcd.backlight();
}
void loop() {
  // Clears the trigPin condition
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;  // Speed of sound wave divided by 2 (go and back)
  // Displays the distance on the Serial Monitor
  if (distance < 9) { in++; }
  Serial.print("\nin: ");
  Serial.print(in);
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration1 = pulseIn(echoPin1, HIGH);
  // Calculating the distance
  distance1 = duration1 * 0.034 / 2;  // Speed of sound wave divided by 2 (go and back)
  // Displays the distance on the Serial Monitor
  if (distance1 > 9 && distance1 < 18) { out++; }
  total=in-out;
  Serial.print("\nout: ");
  Serial.print(out);
 lcd.init();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("in: ");
  lcd.setCursor(0, 1);
  lcd.print(in);
  lcd.setCursor(5,0);
  lcd.print("out: ");
  lcd.setCursor(5,1);
  lcd.print(out);
  lcd.setCursor(10,0);
  lcd.print("total:");
  lcd.setCursor(10,1);
  lcd.print(total);
    delay(500);
}
